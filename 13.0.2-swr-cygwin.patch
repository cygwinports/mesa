--- origsrc/mesa-13.0.2/src/gallium/drivers/swr/rasterizer/common/os.h	2017-01-23 21:53:48.215256200 -0600
+++ src/mesa-13.0.2/src/gallium/drivers/swr/rasterizer/common/os.h	2016-12-05 13:47:46.638212100 -0600
@@ -64,7 +64,7 @@ static inline void AlignedFree(void* p)
     return _aligned_free(p);
 }
 
-#if defined(_WIN64)
+#if defined(__x86_64__)
 #define BitScanReverseSizeT BitScanReverse64
 #define BitScanForwardSizeT BitScanForward64
 #define _mm_popcount_sizeT _mm_popcnt_u64
@@ -74,7 +74,7 @@ static inline void AlignedFree(void* p)
 #define _mm_popcount_sizeT _mm_popcnt_u32
 #endif
 
-#elif defined(__APPLE__) || defined(FORCE_LINUX) || defined(__linux__) || defined(__gnu_linux__)
+#elif defined(__APPLE__) || defined(FORCE_LINUX) || defined(__linux__) || defined(__gnu_linux__) || defined(__CYGWIN__)
 
 #define SWR_API
 
@@ -95,6 +95,7 @@ typedef unsigned int    UINT;
 typedef void*           HANDLE;
 typedef int             LONG;
 typedef unsigned int    DWORD;
+typedef int64_t         INT64;
 
 #undef FALSE
 #define FALSE 0
--- origsrc/mesa-13.0.2/src/gallium/drivers/swr/rasterizer/core/threads.cpp	2016-11-10 16:06:40.000000000 -0600
+++ src/mesa-13.0.2/src/gallium/drivers/swr/rasterizer/core/threads.cpp	2016-12-06 01:35:10.037690600 -0600
@@ -30,7 +30,7 @@
 #include <fstream>
 #include <string>
 
-#if defined(__linux__) || defined(__gnu_linux__)
+#if defined(__linux__) || defined(__gnu_linux__) || defined(__CYGWIN__)
 #include <pthread.h>
 #include <sched.h>
 #include <unistd.h>
@@ -45,6 +45,15 @@
 #include "tilemgr.h"
 
 
+#ifdef __CYGWIN__
+typedef struct _GROUP_AFFINITY {
+    unsigned long Mask;
+    unsigned short Group;
+    unsigned short Reserved[3];
+} GROUP_AFFINITY, *PGROUP_AFFINITY;
+extern "C" int __stdcall SetThreadGroupAffinity (void *, GROUP_AFFINITY *, PGROUP_AFFINITY);
+extern "C" void * __stdcall GetCurrentThread (void);
+#endif
 
 
 // ThreadId
@@ -158,7 +166,7 @@ void CalculateProcessorTopology(CPUNumaN
     free(pBufferMem);
 
 
-#elif defined(__linux__) || defined (__gnu_linux__)
+#elif defined(__linux__) || defined (__gnu_linux__) || defined(__CYGWIN__)
 
     // Parse /proc/cpuinfo to get full topology
     std::ifstream input("/proc/cpuinfo");
@@ -274,6 +282,22 @@ void bindThread(SWR_CONTEXT* pContext, u
 
     SetThreadGroupAffinity(GetCurrentThread(), &affinity, nullptr);
 
+#elif defined(__CYGWIN__)
+
+    GROUP_AFFINITY affinity = {};
+    affinity.Group = threadId / 64;
+
+    // If MAX_WORKER_THREADS is set, only bind to the proc group,
+    // Not the individual HW thread.
+    if (pContext->threadInfo.MAX_WORKER_THREADS)
+        affinity.Mask = -1L;
+    else
+        affinity.Mask = 1UL << (threadId % 64);
+
+    fprintf(stderr, "bindThread(%p, %d, %d, %d) => { %ld, %d }\n", pContext, threadId, procGroupId, bindProcGroup, affinity.Mask, affinity.Group);
+
+    SetThreadGroupAffinity(GetCurrentThread(), &affinity, nullptr);
+
 #else
 
     cpu_set_t cpuset;
--- origsrc/mesa-13.0.2/src/gallium/drivers/swr/swr_loader.cpp	2017-01-23 21:53:48.223756400 -0600
+++ src/mesa-13.0.2/src/gallium/drivers/swr/swr_loader.cpp	2016-12-05 12:13:40.076241400 -0600
@@ -28,6 +28,14 @@
 #include <stdio.h>
 #include <dlfcn.h>
 
+#ifdef __CYGWIN__
+#define	LIBSWRAVX_SONAME	"cygswrAVX.dll"
+#define	LIBSWRAVX2_SONAME	"cygswrAVX2.dll"
+#else
+#define	LIBSWRAVX_SONAME	"libswrAVX.so"
+#define	LIBSWRAVX2_SONAME	"libswrAVX2.so"
+#endif
+
 typedef pipe_screen *(*screen_create_proc)(struct sw_winsys *winsys);
 
 struct pipe_screen *
@@ -40,10 +48,10 @@ swr_create_screen(struct sw_winsys *wins
    util_cpu_detect();
    if (util_cpu_caps.has_avx2) {
       fprintf(stderr, "AVX2\n");
-      pLibrary = util_dl_open("libswrAVX2.so");
+      pLibrary = util_dl_open(LIBSWRAVX2_SONAME);
    } else if (util_cpu_caps.has_avx) {
       fprintf(stderr, "AVX\n");
-      pLibrary = util_dl_open("libswrAVX.so");
+      pLibrary = util_dl_open(LIBSWRAVX_SONAME);
    } else {
       fprintf(stderr, "no AVX/AVX2 support.  Aborting!\n");
       exit(-1);
--- origsrc/mesa-13.0.2/src/glx/glxext.c	2016-11-10 16:05:17.000000000 -0600
+++ src/mesa-13.0.2/src/glx/glxext.c	2016-12-06 02:06:39.713586800 -0600
@@ -925,7 +925,7 @@ __glXInitialize(Display * dpy)
 #endif
 
 #ifdef GLX_USE_WINDOWSGL
-   if (glx_direct && glx_accel)
+   if (glx_direct && glx_accel && (getenv("GALLIUM_DRIVER") == NULL))
       dpyPriv->windowsdriDisplay = driwindowsCreateDisplay(dpy);
 #endif
 
